---

- name: OTP | check if install exists
  stat:
    path: "{{ otp_install_dir }}/bin/erl"
  register: otp_exists

- name: OTP | Install Erlang for Ubuntu
  ansible.builtin.apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
  - erlang
  when: ( ansible_distribution == "Ubuntu" and not otp_exists.stat.exists )

- name: OTP | Get OTP checksum
  ansible.builtin.uri:
    url: "{{ otp_checksum_url }}"
    return_content: true
  register: md5checksum

- name: OTP | Parse MD5 checksum
  ansible.builtin.set_fact:
    otp_checksum: "{{ md5checksum.content.split('  ')[0] }}"      # there are 2 spaces

- name: OTP | Print checksum
  ansible.builtin.debug:
    msg: CheckSum "{{ opt_checksum }}"
  when: otp_checksum.stat.exists

- name: OTP | Get OTP sources
  become: true
  ansible.builtin.get_url:
    url: "{{ otp_url }}"
    dest: "{{ otp_tmp }}"
    #checksum: "{{otp_checksum}}"
    timeout: 360
    force: no
  when: (ansible_distribution == "Amazon" and ansible_distribution_major_version|int == 2023 and not otp_exists.stat.exists)
  register: otp_downloaded

- name: OTP | Extract OTP sources
  become: true
  unarchive: src="{{ otp_tmp }}"
             dest="/tmp"
             remote_src=yes
  when: (ansible_distribution == "Amazon" and ansible_distribution_major_version|int == 2023 and otp_downloaded.changed)
  register: otp_extract

- name: OTP | Configure
  become: true
  shell: chdir="{{otp_build}}" ./configure --prefix="{{otp_install_dir}}"
  when: (ansible_distribution == "Amazon" and ansible_distribution_major_version|int == 2023 and otp_extract.changed)
  register: otp_configure

- name: OTP | Make
  become: true
  shell: chdir="{{otp_build}}" make
  when: (ansible_distribution == "Amazon" and ansible_distribution_major_version|int == 2023 and otp_configure.changed)
  register: otp_make

- name: OTP | Install
  become: true
  shell: chdir="{{otp_build}}" make install
  when: (ansible_distribution == "Amazon" and ansible_distribution_major_version|int == 2023 and otp_make.changed)
  register: otp_install

- name: OTP | cleanup tmp
  become: true
  file:
    path: "{{ otp_tmp }}"
    state: absent
  when: (ansible_distribution == "Amazon" and ansible_distribution_major_version|int == 2023 and otp_install.changed)

...
